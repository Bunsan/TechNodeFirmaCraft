# Configuration file

additional {
    # List any mob names you want disabled on the server
    S:disableMobNames <
     >

    # Should player inventories be stored after death (can be later restored with ob_inventory command)
    B:dumpDeadPlayersInventories=true
}


blocks {
    B:autoanvil=false
    B:autoenchantmenttable=false
    B:beartrap=true
    B:bigbutton=true
    B:blockPlacer=false
    B:blockbreaker=false
    B:cannon=false
    B:canvas=false
    B:canvasglass=false
    B:donationStation=false
    B:drawingtable=false
    B:elevator=false
    B:fan=false
    B:flag=true
    B:goldenegg=false
    B:grave=true
    B:guide=false
    B:heal=false
    B:imaginary=false
    B:itemDropper=true
    B:ladder=true
    B:paintcan=false
    B:paintmixer=false
    B:path=true
    B:projector=false
    B:ropeladder=true
    B:sky=false
    B:sponge=false
    B:sprinkler=false
    B:tank=true
    B:target=true
    B:trophy=true
    B:vacuumhopper=false
    B:village_highlighter=false
    B:xpbottler=false
    B:xpdrain=false
    B:xpshower=false
}


cartographer {
    # List of blocks that should be invisible to cartographer. Example: id:3,  OpenBlocks:openblocks_radio (case sensitive)
    S:blockBlacklist <
        "Natura:Cloud"
     >
}


crane {
    # Enable magnet turtles
    B:addTurtles=false

    # Use shift to control crane direction (otherwise, toggle every time)
    B:boringMode=true

    # Enable collision checking of crane arm
    B:doCraneCollisionCheck=false

    # Show magnet turtles in creative list
    B:showTurtles=true

    # Maximal distance from turtle to magnet when deactivating
    D:turtleMagnetDeactivateRange=3.0

    # Range of magnet CC peripheral
    D:turtleMagnetRange=32.0
}


cursor {
    # Amount of damage a cursor can take
    I:cursorMaxDamage=128
}


debug {
    # Show structures found by golden eye
    B:goldenEyeDebug=false

    # Dump extra amount of data, every time grave is created
    B:gravesDebug=false
}


dropblock {
    # Does the elevator drain player XP when used?
    B:elevatorDrainsXP=true

    # The elevator will ignore half blocks when counting the blocks it can pass through
    B:ignoreHalfBlocks=false

    # The elevator will try to pass through blocks that have custom collision boxes
    B:irregularBlocksArePassable=true

    # The maximum amount of blocks the elevator can pass through before the teleport fails. -1 disables this
    I:maxPassThrough=4

    # The range of the drop block
    I:searchDistance=20

    # Defines blocks that are handled specially by elevators. Entries are in form <modId>:<blockName>:<action> or id:<blockId>:<action>. Possible actions: abort (elevator can't pass block), increment (counts for elevatorMaxBlockPassCount limit) and ignore
    S:specialBlockRules <
     >
}


fan {
    # Maximum force applied every tick to entities nearby (linear decay)
    D:fanForce=0.05

    # Range of fan in blocks
    D:fanRange=10.0

    # Is fan force controlled by redstone current
    B:isRedstoneActivated=true
}


features {
    # Explosive enchant can break blocks at level 3
    B:explosiveEnchantGrief=false

    # Id of explosive enchantment
    I:explosiveEnchantmentId=211

    # Id of flim flam enchantment
    I:flimFlamEnchantmentId=213

    # Should every player get info book on first login
    B:infoBook=false

    # Id of last stand enchantment
    I:lastStandEnchantmentId=212

    # Id of liquid XP fluid (WARNING: only for users who know what they are doing - changing this id can break worlds
    S:xpFluidId=xpjuice
}


glasses {
    # 0.0 - no visible change to world, 1.0 - world fully obscured
    D:opacity=0.95

    # Use texture for obscuring world
    B:useTexture=true
}


graves {
    # Try to overwrite blocks with graves if no suitable place is found on first try
    B:destructiveGraves=false

    # Size of cube searched for spaces suitable for grave spawning
    I:spawnRange=10

    # Store contents of spawned graves into separate NBT files (can later be restored with ob_inventory command)
    B:storeContents=true
}


guide {
    # How builder guide should react to redstone. 0 - not sensitive, 1 - powered == on, -1 - inverted
    I:redstoneSensitivity=1
}


hacks {
    # Enable experimental features that may be buggy or broken entirely
    B:enableExperimentalFeatures=false
}


imaginary {
    # Speed of imaginary blocks fading/appearing
    D:fadingSpeed=0.0075

    # Number of newly created crayon/pencil uses
    D:numberOfUses=10.0
}


items {
    B:cartographer=false
    B:craneBackpack=false
    B:craneControl=false
    B:crayonGlasses=false
    B:cursor=false
    B:devnull=false
    B:emptyMap=false
    B:filledbucket=false
    B:goldenEye=false
    B:hangglider=true
    B:heightMap=false
    B:infoBook=false
    B:luggage=false
    B:paintBrush=false
    B:pedometer=true
    B:pencilGlasses=false
    B:seriousGlasses=false
    B:sleepingBag=true
    B:slimalyzer=true
    B:sonicglasses=false
    B:spongeonastick=false
    B:squeegee=false
    B:stencil=false
    B:tastyClay=false
    B:technicolorGlasses=false
}


loot {
    B:donationStation=false
    B:paintBrush=false
    B:sonicGlasses=false
    B:stencil=false
    B:technicolorGlasses=true
}


radio {
    # Music merchant id (-1 to disable)
    I:radioVillagerId=6156

    # Should tuned crystals sell records too
    B:radioVillagerSellsRecords=true
}


sponge {
    # Sponge block range (distance from center)
    I:spongeRange=3

    # SpongeOnAStick use count
    I:spongeStickUseCount=256
}


sprinkler {
    # 1/chance that crops will be fertilized with bonemeal
    I:bonemealFertilizeChance=200

    # The range in each cardinal direction that crops will be affected.
    I:effectiveRange=4

    # 1/chance that crops will be fertilized without bonemeal
    I:fertilizeChance=500
}


tanks {
    # The amount of buckets each tank can hold
    I:bucketsPerTank=16

    # Should filled tanks be searchable with creative menu
    B:displayAllFluids=true

    # Tanks will emit light when they contain a liquid that glows (eg. lava)
    B:emitLight=true

    # Should tanks try to balance liquid amounts with neighbours
    B:tankTicks=true
}


tomfoolery {
    # You know, THAT thing! That you shouldn't do in public!
    B:doItWhileTyping=false

    # Blacklist for effects used by flim-flam enchantment
    S:flimFlamBlacklist <
     >

    # Allow only flimflams that don't cause death (or at least very rarely)
    B:safeOnly=true

    # Are you serious too?
    B:weAreSeriousPeople=true
}


trophy {
    # The chance (from 0 to 1) of a trophy drop. for example, 0.001 for 1/1000
    D:trophyDropChance=0.001
}


